name: Docker Image CI
env:
  DOCKER_PROJECT: emscripten_sdl2_framework
  DOCKER_IMAGE_NAME: emscripten_sdl2_framework:latest
  DOCKER_RUN_COMMAND: docker run --rm -i -v ${{ github.workspace }}:/home/emscripten_sdl2_framework ${{ secrets.DOCKER_HUB_USERNAME }}/emscripten_sdl2_framework:latest bash -c
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWD }}
      # - name: Build Docker Image
      #   run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/${{env.DOCKER_PROJECT}}:latest .
      # - name: Push Docker Image
      #   run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{env.DOCKER_PROJECT}}:latest
      
      - name: cspell check
        run: |
          ${{ env.DOCKER_RUN_COMMAND }} '
          cspell "{src,test}/**/*.{hpp,cpp}"
          '
      - name: clang-format check
        run: |
          ${{ env.DOCKER_RUN_COMMAND }} '
          find src test  -regex ".*\\.\\(cpp\\|hpp\\|c\\|h\\)" | xargs clang-format -style=file --Werror --dry-run
          '
      - name: config
        run: |
          ${{ env.DOCKER_RUN_COMMAND }} '
            cmake -B build -DENABLE_CLANG_TIDY=1 -DENABLE_WERROR=1 -G Ninja
          '
      - name: build and test
        run: |
          ${{ env.DOCKER_RUN_COMMAND }} '
            cmake --build build --parallel --target cov
          '
      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: ./build/cov.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '100 100'